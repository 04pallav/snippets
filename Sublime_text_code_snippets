UNIX

	untar a tar.gz
===========================
tar -xzf file1.tar.gz
===========================



installing a tar gz file ( Arch linux installs using tar ball)
==========================================================
1. download the tar gz file 
2. untar it # tar -xzf file1.tar.gz
3. find the executable (possibly a py file) or look for a README or run the autogen.sh file??
4. sudo ln -s /path/to/executable.py /usr/bin/keyword1 ## this places the shortcut for executable in /usr/bin folder
5. which keyword1 ## this should output the usr/bin/ address
6. Now run the executable using the keyword -- arguments 
==========================================================

What is openBSD?
==============================
It is an OS. I dont use this OS
==============================


How to install packages in Arch Linux ?
=====================================
apt-get WILL NOT WORK !
pacman has to be used. 
=====================================

Clear terminal text
====================================
clear
====================================

Output first 100 lines
===================================
head -10 bar.txthead 
===================================

PYTHON

splitting a column 
================================
df['A'], df['B'] = df['AB'].str.split('_', 1).str   ### AB is the column being split into A&B and _ is the separator 
================================

dropping a column 
===============================
df.drop('col1',axis=1).              
df.drop(['col1','col2'],axis=1)  #axis=1 means vertical 
===============================


string(str) column to integer(int)
==========================
minor['B']= minor['B'].map(lambda x: int(x))

minor['B']= int(minor['B']). ### will not WORK ## Series to int error
==========================


Increase size of print area in terminal using pd
==========================
pd.set_option('display.width', 500)
==========================


Using lambda to create functions
==========================
func1= lambda x: x**2
func1(2)
#4
==========================



Pycharm Keyboard shortcuts 
=================================
select and execute in console -- alt+e
slect whole line 			  -- triple click mouse 
select a word 				  -- double click mouse



GIT 
========================================================================
1-- working directory 
2-- staging area
3-- local commit area
4-- remote



save git diff in color 
======================
git diff --color > foo.txt
======================

adding files in git 
=====================
git add . 
=====================

How to undo a git add?
=====================
git reset 
=====================

what is git stash?
=====================
takes tracked changes (these havent been added)+ staged changes(these have been added) and saves them some place else
=====================

How to only add modified but ignore untracked?
=========================================================================================
git add -u   #This adds modified and deleted but ideally untracked files should be in git ignore
=========================================================================================

What is origin/mainline or origin/master?
=========================================
This is the remote repository (code.amazon.com or github.com)
=========================================

How to see difference between remote and local commit (between 4 & 3)
=======================================================================================
git diff origin/mainline mainline 
git diff mainline origin/mainline ### This is WRONG it is the other way around. 

For a particular file 
git diff origin/mainline:bin/generate_downsample.py mainline:bin/generate_downsample.py 
=======================================================================================


How to add a change to the same commit without making a new commit?
=======================================================================================
git add file1.py
git commit --amend --no-edit
=======================================================================================


What difference by default does a git diff show ?
=======================================================================================

=======================================================================================


How to combine commits together
=======================================================================================
git reset --soft HEAD~3
 git commit -m "combine three commits. 1. home directory change 2.create directories at once place 3.change attributes to dict and ML parameters outside" 

=======================================================================================


Initialize a git repo and push to github 
==========================================
git init inside folder
git add .
git commit -m "first commit"
git remote add origin https://github.com/04pallav/sCodeSnips.git

# change remote 
git remote set-url origin git@bitbucket.org:04pallav/scodesnips.git

git push -u origin master 

if failed due to ssh issue, set up ssh !!
ssh-keygen  (generates a key/pair)  The public key is saved 
ssh-add -K ~/.ssh/<private_key_file> (mac)

Add this private key in the website or server

even after this I wasnt able to push somehow! 




what is ssh ?
==================
Server=host



1. Secure shell is a method (network protocol) for client(local machine) to connect a server(host) and authenticate SECURELY.
2. Servers public key (host key) is a key which server distributes to the clients. 
3. Clients use this public key to encrypt data and anything which is encrypted by this public key can only be decrypted by a private key! ( this is called asymmetric encryption)
3. When you connect for the first time you give your PUBLIC key to server. server takes "some data" and encrypts it using YOUR Public key. anything encrypted with YOUR public key can only be opened with YOUR private key!! which no one else has so now you have that data! Now you send this data back and server knows that it is the same data i sent and so you have a private key for your public key! 
3. this method ensures security!

ssh clients examples : putty,




















